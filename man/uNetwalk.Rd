% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/netpredictor.R
\name{uNetwalk}
\alias{uNetwalk}
\title{Perform Random walk on a Unipartite Network}
\usage{
uNetwalk(ig, normalise = c("row", "column", "laplacian", "none"),
  dataSeed = NULL, restart = 0.8, parallel = TRUE, multicores = NULL,
  verbose = T)
}
\arguments{
\item{ig}{igraph object}

\item{normalise}{normalise method}

\item{dataSeed}{vector or dataframe}

\item{restart}{restart probability parameter}

\item{parallel}{to execute in parallel either TRUE or FALSE}

\item{multicores}{Number of cores to be used when running in parallel}

\item{verbose}{Verbose output}
}
\description{
Peforms random walk with restart with preferred seed sets. If seed sets are not given then the adjacencny
matrix is taken as the input as the input seed sets. THe restart parameter controls the random walk probability . This can be
changed default is set to 0.8. Normalization of the matrix can be done by row,column,laplacian. For faster computation
Parallalization is implemented with multicores. Parallization is done using foreach package.
}
\details{
Random walk on unipartite networks
}
\examples{
\donttest{
# generate a random graph according to the ER model
library(igraph)
library(netpredictor)
g1 <- upgrade_graph(erdos.renyi.game(100, 1/100))
V(g1)$name <- seq(1,100,1)
## Computing RWR
pM <- uNetwalk(g1,normalise="laplacian", restart=0.75, parallel=FALSE)
## Settin the seed nodes.
d1 <- c(1,0,1,0,1)
d2 <- c(0,0,1,0,1)
dataSeed <- data.frame(d1,d2)
rownames(dataSeed) <- 1:5
pM <- uNetwalk(g1, normalise="laplacian", dataSeed=dataSeed, restart=0.8,
               parallel=FALSE,multicores=NULL, verbose=T)
}
}
\references{
\itemize{
  \item Kohler S, et al. Walking the Interactome for Prioritization of Candidate Disease Genes. American Journal of Human Genetics. 2008;82:949–958.
  \item Can, T., Camoglu, O., and Singh, A.K. (2005). Analysis of protein-protein interaction networks using random walks. In BIOKDD '05: Proceedings of the 5th international workshop on Bioinformatics (New York, USA: Association for Computing Machinery). 61–68
}
}

